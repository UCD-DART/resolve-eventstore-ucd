{"version":3,"sources":["../src/connect.ts"],"names":["connect","pool","specific","log","debug","Postgres","escapeId","escape","fullJitter","executeStatement","coercer","databaseName","eventsTableName","snapshotsTableName","secretsTableName","config","Object","assign","bind"],"mappings":";;;;;;;AAAA;;;;AAGA,MAAMA,OAAO,GAAG,OACdC,IADc,EAEdC,QAFc,KAGG;AAAA;;AACjB,QAAMC,GAAG,GAAG,qBAAO,SAAP,CAAZ;AACAA,EAAAA,GAAG,CAACC,KAAJ,CAAU,6BAAV;AAEA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA;AANI,MAOFR,QAPJ;AASA,QAAM;AACJS,IAAAA,YADI;AAEJC,IAAAA,eAAe,GAAG,QAFd;AAGJC,IAAAA,kBAAkB,GAAG,WAHjB;AAIJC,IAAAA,gBAAgB,GAAG;AAJf,sBAKFb,IAAI,CAACc,MALH,uDAKa,EALnB;AAOAC,EAAAA,MAAM,CAACC,MAAP,CAAchB,IAAd,EAAoB;AAClBU,IAAAA,YADkB;AAElBC,IAAAA,eAFkB;AAGlBC,IAAAA,kBAHkB;AAIlBC,IAAAA,gBAJkB;AAKlBT,IAAAA,QALkB;AAMlBG,IAAAA,UANkB;AAOlBE,IAAAA,OAPkB;AAQlBD,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACS,IAAjB,CAAsB,IAAtB,EAA4BjB,IAA5B,CARA;AASlBK,IAAAA,QATkB;AAUlBC,IAAAA;AAVkB,GAApB;;AAaA,MAAIN,IAAI,CAACQ,gBAAL,IAAyB,IAA7B,EAAmC;AACjC,UAAMR,IAAI,CAACQ,gBAAL,CAAsB,uBAAtB,CAAN;AACD;;AACDN,EAAAA,GAAG,CAACC,KAAJ,CAAU,8CAAV;AACD,CAxCD;;eA0CeJ,O","sourcesContent":["import getLog from './js/get-log'\nimport { AdapterPool, AdapterSpecific } from './types'\n\nconst connect = async (\n  pool: AdapterPool,\n  specific: AdapterSpecific\n): Promise<any> => {\n  const log = getLog('connect')\n  log.debug('configuring postgres client')\n\n  const {\n    Postgres,\n    escapeId,\n    escape,\n    fullJitter,\n    executeStatement,\n    coercer,\n  } = specific\n\n  const {\n    databaseName,\n    eventsTableName = 'events',\n    snapshotsTableName = 'snapshots',\n    secretsTableName = 'secrets',\n  } = pool.config ?? {}\n\n  Object.assign(pool, {\n    databaseName,\n    eventsTableName,\n    snapshotsTableName,\n    secretsTableName,\n    Postgres,\n    fullJitter,\n    coercer,\n    executeStatement: executeStatement.bind(null, pool),\n    escapeId,\n    escape,\n  })\n\n  if (pool.executeStatement != null) {\n    await pool.executeStatement('SELECT 0 AS \"defunct\"')\n  }\n  log.debug('connection to postgres databases established')\n}\n\nexport default connect\n"],"file":"connect.js"}