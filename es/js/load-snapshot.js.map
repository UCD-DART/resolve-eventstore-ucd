{"version":3,"sources":["../../src/js/load-snapshot.js"],"names":["loadSnapshot","databaseName","snapshotsTableName","executeStatement","escapeId","escape","snapshotKey","constructor","String","Error","databaseNameAsId","snapshotsTableNameAsId","rows","content","length","snapshotContent"],"mappings":"AAAA,MAAMA,YAAY,GAAG,OACnB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,kBAAhB;AAAoCC,EAAAA,gBAApC;AAAsDC,EAAAA,QAAtD;AAAgEC,EAAAA;AAAhE,CADmB,EAEnBC,WAFmB,KAGhB;AACH,MAAIA,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACC,WAAZ,KAA4BC,MAAvD,EAA+D;AAC7D,UAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,QAAMC,gBAAgB,GAAGN,QAAQ,CAACH,YAAD,CAAjC;AACA,QAAMU,sBAAsB,GAAGP,QAAQ,CAACF,kBAAD,CAAvC;AAEA,QAAMU,IAAI,GAAG,MAAMT,gBAAgB,CAChC,iCAAgCO,gBAAiB,IAAGC,sBAAuB;AAChF,4BAA4BN,MAAM,CAACC,WAAD,CAAc;AAChD,YAHqC,CAAnC;AAKA,QAAMO,OAAO,GAAGD,IAAI,CAACE,MAAL,GAAc,CAAd,GAAkBF,IAAI,CAAC,CAAD,CAAJ,CAAQG,eAA1B,GAA4C,IAA5D;AAEA,SAAOF,OAAP;AACD,CAnBD;;AAqBA,eAAeb,YAAf","sourcesContent":["const loadSnapshot = async (\n  { databaseName, snapshotsTableName, executeStatement, escapeId, escape },\n  snapshotKey\n) => {\n  if (snapshotKey == null || snapshotKey.constructor !== String) {\n    throw new Error('Snapshot key must be string')\n  }\n\n  const databaseNameAsId = escapeId(databaseName)\n  const snapshotsTableNameAsId = escapeId(snapshotsTableName)\n\n  const rows = await executeStatement(\n    `SELECT \"snapshotContent\" FROM ${databaseNameAsId}.${snapshotsTableNameAsId}\n    WHERE \"snapshotKey\" = ${escape(snapshotKey)} \n    LIMIT 1`\n  )\n  const content = rows.length > 0 ? rows[0].snapshotContent : null\n\n  return content\n}\n\nexport default loadSnapshot\n"],"file":"load-snapshot.js"}