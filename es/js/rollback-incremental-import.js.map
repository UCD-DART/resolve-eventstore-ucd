{"version":3,"sources":["../../src/js/rollback-incremental-import.js"],"names":["rollbackIncrementalImport","executeStatement","databaseName","eventsTableName","escapeId","databaseNameAsId","incrementalImportTableAsId"],"mappings":"AAAA,MAAMA,yBAAyB,GAAG,OAAO;AACvCC,EAAAA,gBADuC;AAEvCC,EAAAA,YAFuC;AAGvCC,EAAAA,eAHuC;AAIvCC,EAAAA;AAJuC,CAAP,KAK5B;AACJ,QAAMC,gBAAgB,GAAGD,QAAQ,CAACF,YAAD,CAAjC;AACA,QAAMI,0BAA0B,GAAGF,QAAQ,CACxC,GAAED,eAAgB,qBADsB,CAA3C;AAGA,QAAMF,gBAAgB,CACnB,wBAAuBI,gBAAiB,IAAGC,0BAA2B,GADnD,CAAtB;AAGD,CAbD;;AAeA,eAAeN,yBAAf","sourcesContent":["const rollbackIncrementalImport = async ({\n  executeStatement,\n  databaseName,\n  eventsTableName,\n  escapeId,\n}) => {\n  const databaseNameAsId = escapeId(databaseName)\n  const incrementalImportTableAsId = escapeId(\n    `${eventsTableName}-incremental-import`\n  )\n  await executeStatement(\n    `DROP TABLE IF EXISTS ${databaseNameAsId}.${incrementalImportTableAsId};`\n  )\n}\n\nexport default rollbackIncrementalImport\n"],"file":"rollback-incremental-import.js"}